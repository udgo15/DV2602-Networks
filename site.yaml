- name: Deploy Flask App to Web Servers
  hosts: webservers
  become: true
  tasks:
    - name: Install dependencies
      apt:
        name:
          - python3
          - python3-pip
        update_cache: yes

    - name: Install Flask
      pip:
        name: flask

    - name: Create app directory
      file:
        path: /opt/flaskapp
        state: directory

    - name: Copy app.py to server
      copy:
        src: app.py
        dest: /opt/flaskapp/app.py
        mode: '0644'

    - name: Create systemd service
      copy:
        dest: /etc/systemd/system/flaskapp.service
        content: |
          [Unit]
          Description=Flask App
          After=network.target

          [Service]
          ExecStart=/usr/bin/python3 /opt/flaskapp/app.py
          WorkingDirectory=/opt/flaskapp
          Restart=always
          User=ubuntu

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to register flaskapp service
      systemd:
        daemon_reload: true

    - name: Start Flask app
      systemd:
        name: flaskapp
        state: started
        enabled: true

- name: Set Up HAProxy Load Balancer
  hosts: HAproxy
  become: true
  tasks:
    - name: Install HAProxy
      apt:
        name: haproxy
        update_cache: yes

    - name: Generate HAProxy config
      copy:
        dest: /etc/haproxy/haproxy.cfg
        content: |
          global
              log /dev/log local0
              log /dev/log local1 notice
              chroot /var/lib/haproxy
              stats socket /run/haproxy/admin.sock mode 660 level admin
              stats timeout 30s
              user haproxy
              group haproxy
              daemon

          defaults
              log     global
              mode    http
              option  httplog
              option  dontlognull
              timeout connect 5000
              timeout client  50000
              timeout server  50000
              errorfile 400 /etc/haproxy/errors/400.http
              errorfile 403 /etc/haproxy/errors/403.http
              errorfile 408 /etc/haproxy/errors/408.http
              errorfile 500 /etc/haproxy/errors/500.http
              errorfile 502 /etc/haproxy/errors/502.http
              errorfile 503 /etc/haproxy/errors/503.http
              errorfile 504 /etc/haproxy/errors/504.http

          frontend http_front
              bind *:80
              default_backend http_back

          backend http_back
              balance roundrobin
              {% for server in groups['webservers'] %}
              server {{ server }} {{ hostvars[server]['ansible_default_ipv4']['address'] }}:5000 check
              {% endfor %}

    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted
        enabled: true