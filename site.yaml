
- name: Configure and deploy Flask app with HAProxy and NGINX UDP proxying
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

# ------------------------------
- name: Configure web servers
  hosts: webservers
  become: yes

  tasks:
    - name: Install required packages
      apt:
        name: ['python3', 'python3-pip', 'python3-flask', 'snmpd']
        state: present

    - name: Create directory for Flask app
      file:
        path: /opt/flaskapp
        state: directory
        mode: '0755'

    - name: Copy Flask application
      copy:
        content: |
          import flask
          import time
          import socket

          h_name = socket.gethostname()
          IP_addres = socket.gethostbyname(h_name)

          app = flask.Flask(__name__)

          @app.route('/')
          def index():
              Time = time.strftime("%H:%M:%S")
              return Time + " Serving from " + h_name + " (" + IP_addres + ")\\n"

          if __name__ == '__main__':
              app.run(host='0.0.0.0', port=80)
        dest: /opt/flaskapp/application2.py
        mode: '0644'

    - name: Configure SNMPd to listen on port 161
      lineinfile:
        path: /etc/snmp/snmpd.conf
        regexp: '^agentaddress\\s+.*'
        line: 'agentaddress udp:161'
      notify: Restart SNMPd

    - name: Install Flask
      pip:
        name: flask
        executable: pip3

    - name: Create systemd service for Flask app
      copy:
        content: |
          [Unit]
          Description=Flask Application
          After=network.target

          [Service]
          User=root
          WorkingDirectory=/opt/flaskapp
          ExecStart=/usr/bin/python3 /opt/flaskapp/application2.py
          Restart=always

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/flaskapp.service
        mode: '0644'

    - name: Enable and start Flask service
      systemd:
        name: flaskapp
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Ensure SNMPd is started and enabled
      systemd:
        name: snmpd
        state: started
        enabled: yes

  handlers:
    - name: Restart SNMPd
      systemd:
        name: snmpd
        state: restarted

# ------------------------------
- name: Configure HAProxy and NGINX on load balancer
  hosts: HAproxy
  become: yes

  tasks:
    - name: Install HAProxy and NGINX
      apt:
        name: ['haproxy', 'nginx']
        state: present
        update_cache: yes

    - name: Configure HAProxy
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'
      notify: Restart HAProxy

    - name: Enable and start HAProxy
      systemd:
        name: haproxy
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Configure NGINX for UDP load balancing
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'
        force: yes
      notify: Reload NGINX

    - name: Enable and start NGINX
      systemd:
        name: nginx
        enabled: yes
        state: started
        daemon_reload: yes

  handlers:
    - name: Restart HAProxy
      systemd:
        name: haproxy
        state: restarted

    - name: Reload NGINX
      systemd:
        name: nginx
        state: reloaded
